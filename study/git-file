基本linux命令
cd / 改变目录
cd .. / 回退到上一个目录,直接cd进入默认目录
pwd / 显示当前所在的目录路径
toch / 新建一个文件如: toch index.js就会在当前目录下新建一个index.js的文件
rm / 删除一个文件,rm index.js就会吧index.js文件删除
mkdir / 新建一个目录,就是新建一个文件夹
rm -r / 删除一个文件夹, / rm -r src 删除src目录
mv / 移动文件 / mv index.html src index.html是我们要移动的文件,src是目标文件
rm -rf / 不要尝试在Linux中使用,它会把所有的文件全部删除
reset / 重新初始化终端,清屏
clear  / 清屏
history / 查看命令历史
help / 帮助
exit / 退出
ls / 查看当前文件
cd + (文件名) / 进入这个文件夹中
#表示注释
git clone / 把远程的代码克隆到本地的文件夹中
版本控制是对文件的版本控制,要对文件进行修改,提交操作,首先要知道文件当前在什么状态
git commit -m / 提交暂存区的内容到本地仓库 / -m是提交信息
git status / 查看所有文件状态/查看工作区和暂存区的状态
git config --global user.name / 使用github的名字
git add / 将过去做的“新建/修改”添加到暂存区
git config --global user.email / 使用你的邮箱
git config --system --list / 查看系统的配置
gitconfig --global --list / 查看当前用户的配置
ls -la / 查看隐藏的文件
LL指令 / 查看命令
注意: 初始化git后里面的 / .git目录中存放的是本地库相关的子目录和文件,不要删除
git log --one line / 显示提交到历史记录
touch / 创建一个文件
git remote -v / 参看远程仓库
git checkout + 名字 / 切换分支
git checkout -b / 创建新分支并且切换为当前分支
git branch -d + name / 删除已经参与合并的分支
git branch -D + name / 删除一个分支
git push origin + name / 将本地分支push到远程
git branch -a / 查看所有分支
git branch -r / 查看本地分支
git commit -m + ‘描述’ / 提交

Git版本控制
就是用于管理多人协同开发的技术
没有进行版本控制或者版本控制本身缺乏正确的流程管理,在软件开发过程中会引入问题
版本控制分为三类
第一: 本地版本控制 / 记录文件每次的更新,可以对版本做一个快照记录补丁,适合个人使用
第二: 集中版本控制 / 所有的版本数据都保存在服务器上,协同开发者从服务器同步更新上传
第三: 分布式版本控制 / 所有版本信息仓库全部同步到本地的每个用户,可以本地查看版本
可以离线在本地提交,需要在连网是push到相应的服务器或用户那里,每个人拥有全部代码
Git和SVN最主要的区别
SVN是集中式版本控制系统,版本库是集中放在中央服务器的
工作是首先要从服务器得到最新的版本,然后工作.工作后在推送到服务器
Git是分布式版本控制系统,每个人的电脑就是一个完整的版本库
协同方式: 自己在电脑上修改文件A,别人也在电脑上修改文件A,这是我们之间需要把各自修改推送给对方,就可以互相看到对方修改到的内容了,Git可以直接看到更新的文件和代码

git基本概念
repository(储存库) / 工作区域操作
第一个: (working directory) / 添加,编辑,修改文件等动作
第三个: Git repository (git储存库) / 最终确定的文件保存到仓库,成为一个新版本
第二个: 暂存区 / 暂存已经修改的文件最后统一提交到git仓库中
向仓库中添加文件流程
工作区(working directory) 
查看当前所有状况状况命令: git status
工作区提交文件到暂存区使用命令: git add + (要提交的文件名)
暂存区提交文件到git储存库使用命令: git commit -m '提交描述'
Git初始化以及仓库创建和操作
Git基本理论
Git本地有三个工作区: 工作目录 / 暂存区 / 资源(仓库)库 / 远程Git仓库
首先在本地文件通过git add 添加到暂存区
在暂存区需要使用git commit 命令提交到本地仓库
在暂存区需要使用git push 命令远程提交到本地仓库
在远程把代码拉到本地使用 git pull 命令就可把远程代码拉到本地
在本地代码回到暂存区使用 git reset 命令就可以
在暂存区把代码返回本地使用 git checkout命令
第一: 工作区就是平时存放项目代码的地方
第二: 暂存区用于临时存放改动的代码,它是一个文件,保存即将提交到文件列表的信息
第三: 仓库区安全存放数据的位置,这里有提交到所有版本的数据
第四: 远程仓库,托管代码的服务器
git操作
首先第一区域个叫: 工作区 / 第二个区域叫: 暂存区 / 第三个区域叫: 本地库
第一步: 在工作区新建一个文件用 git add 添加到暂存区
第二步: 在暂存区提交到本地库使用 git commit 添加到本地库
最后一步: git push / 把数据push进远程库
git push操作使用
要使用git进行版本控制必须先初始化仓库 使用: git init 命令初始化仓库
如果初始化成功就会生成一个.git目录里面存储了管理当前目录内容需要的仓库数据
git status 命令查看仓库的状态
git add 命令向暂存区中添加文件,想要文件成为git仓库的管理对象就需要git add命令
git add 将其加入暂存区,暂存区是提交之前的一个临时区域
git commit 命令保存仓库的历史记录 / -m 后面的称作提交信息,是对提交的概述
git log 命令查看提交日志 / 可以查看以往仓库中提交的日志
git log -p 命令可以显示文件的改动,文件的前后差别就会显示在提交信息之后
git diff 命令查看更改前后的差别 / 可以查看工作树,暂存区最新提交之间的差别
在执行git commit命令之前先执行git diff HEAD命令查看本次提交和上次提交
git 分支的操作 / 没看懂
git branch 命令可以将分支名列表显示,同时可以确认当前所在分支
git branch / *master, 表示我们当前所在的分支,我们在master分支下开发
git checkout -b 命令创建,切换分支 
如果想让当前的master分支为基础创建新的分支就需要使用 git checkout -b
在版本控制中,使用多线条同时推进多个任务,就是分支
同时并行推进多个功能开发,提高开发效率
各个分支在开发过程中,如果一个分支开发失败,不会对其他分支有任何影响
使用 git branch -v 命令可以查看总共的分支,和当前的分支
使用 git branch -a 命令可以查看当前的分支
使用 git branch + 名称 / 命令可以创建一条分支
使用 git checkout 命令可以切换 / 后面更分支名就可以: git checkout hot_fix
使用 git merge 命令 / 合并修改的分支到master分支 / git merge hot_fix / 后面跟修改名
使用 git merge 命令合并的时候,必须把当前的分支设置到master上才可以
使用 git branch 命令可以将分支显示出来,同时可以确认当前所在分支
使用 git checkout -b 创建并且设置当前分支
使用 git merge 命令合并创建的分支 / 格式: git merge --no-ff + 创建的分支名
使用 git commit --amend 命令可以修改提交信息
提交过一次的时候在修改是就可以使用命令 git commit -am + "描述"
使用 git reset --hard + 提供目标时间点点哈希值,就可以完全恢复至该时间的状态
使用 git reflog 命令可以查看所有操作
git 推送至远程仓库
git clone 获取远程仓库
首先切换到其他目录下,将github上的仓库clone到本地 / git clone + 仓库名
git branch - a 命令查看当前分支的信息,添加-a参数可以显示本地库和远程库分支信息
当我们git clone后会默认处于master分支下
git pull 命令获取最新的远程仓库分支
pull request
通过fork访问仓库页面,点击fork创建自己的仓库,然后克隆这个仓库
我们会创建一个名为work的特性分支,用来发送pull request请求
要从github发送pull request,github端端仓库中必须有一个包含了,修改后代码的分支
发送过pull request请求后目标仓库中就会创建pull request和lssue
我们发送的pull request修改没有被采纳,对方的仓库不会有任何变化
学习vim
使用vim命令,进入vim
使用:q退出本次编辑
关于vim最重要的事情是,知道它是一个模式编辑器,启动后会进入命令模式
为了在文本中编辑内容,我们需要先进入插入模式,按下“i”键进入,现在就可以输入修改内容
如果要退出插入模式返回命令模式,按下esc键
为了保存我们刚才对文件所做的操作,我们必须在命令模式输入一个ex命令
通过按下“:”键,然后在冒号后面输入“w”字符 / : w / 保存对文本的修改
光标移动按键 / ¥移动到当前行的末尾 / 